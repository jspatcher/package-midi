{"version":3,"file":"index.jspatpkg.js","mappings":"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","sources":["webpack://@jspatcher/package-midi/./src/index.ts","webpack://@jspatcher/package-midi/./src/objects/Base.ts","webpack://@jspatcher/package-midi/./src/objects/devices.ts","webpack://@jspatcher/package-midi/./src/objects/midiFormat.ts","webpack://@jspatcher/package-midi/./src/objects/midiIn.ts","webpack://@jspatcher/package-midi/./src/objects/midiOut.ts","webpack://@jspatcher/package-midi/./src/objects/midiparse.ts","webpack://@jspatcher/package-midi/./src/package-info.ts","webpack://@jspatcher/package-midi/./src/sdk.ts","webpack://@jspatcher/package-midi/webpack/bootstrap","webpack://@jspatcher/package-midi/webpack/runtime/create fake namespace object","webpack://@jspatcher/package-midi/webpack/runtime/define property getters","webpack://@jspatcher/package-midi/webpack/runtime/hasOwnProperty shorthand","webpack://@jspatcher/package-midi/webpack/runtime/make namespace object","webpack://@jspatcher/package-midi/./src/index.jspatpkg.ts"],"sourcesContent":["import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;","import { author, name, version, description } from \"../index\";\r\nimport { DefaultObject } from \"../sdk\";\r\n\r\nexport default class MidiObject<\r\n    D = {},\r\n    S = {},\r\n    I extends any[] = any[],\r\n    O extends any[] = any[],\r\n    A extends any[] = any[],\r\n    P = {},\r\n    U = {},\r\n    E = {}\r\n> extends DefaultObject<D, S, I, O, A, P, U, E> {\r\n    static package = name;\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n}\r\n","import type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport type { StrictDropdownItemProps } from \"semantic-ui-react\";\nimport { Bang, isBang } from \"../sdk\";\nimport MidiObject from \"./Base\";\n\ninterface IS {\n    midiAccess: WebMidi.MIDIAccess;\n}\ninterface P {\n    autoUpdate: boolean;\n}\n\nexport default class midiDevices extends MidiObject<{}, {}, [Bang | WebMidi.MIDIPortType[]], [WebMidi.MIDIPort[], StrictDropdownItemProps[]], WebMidi.MIDIPortType[], P> {\n    static description = \"Enumerate MIDI devices\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"object\",\n        description: \"Bang to enumerate, MIDIPortType[] to use a filter\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"Array of MIDIPort\"\n    }, {\n        type: \"object\",\n        description: \"Array of DropdownItemProps\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"enum\",\n        varLength: true,\n        optional: true,\n        enums: [\"input\", \"output\"],\n        default: [\"input\", \"output\"],\n        description: \"Output only kinds of devices\"\n    }];\n    static props: IPropsMeta<P> = {\n        autoUpdate: {\n            type: \"boolean\",\n            default: true,\n            description: \"Auto output devices when devices change\"\n        }\n    };\n    _ = { midiAccess: undefined as WebMidi.MIDIAccess };\n    handleDeviceChange = async () => {\n        if (!this.getProp(\"autoUpdate\")) return;\n        const filters = this.args.slice();\n        if (!filters.length) filters.push(\"input\", \"output\");\n        const { midiAccess } = this._;\n        if (!midiAccess) {\n            this.error(\"MIDIAccess not available.\");\n            return;\n        }\n        const devices: WebMidi.MIDIPort[] = [];\n        if (filters.indexOf(\"input\") !== -1) midiAccess.inputs.forEach(v => devices.push(v));\n        if (filters.indexOf(\"output\") !== -1) midiAccess.outputs.forEach(v => devices.push(v));\n        const options = devices.map((d, key) => {\n            const { type, name, id } = d;\n            return { key, icon: { input: \"sign-in\", output: \"sign-out\" }[type], text: name || id, value: id };\n        });\n        this.outletAll([devices, options]);\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"postInit\", async () => {\n            try {\n                const midiAccess = await navigator.requestMIDIAccess({ sysex: true });\n                this._.midiAccess = midiAccess;\n                midiAccess.addEventListener(\"statechange\", this.handleDeviceChange);\n                if (this.getProp(\"autoUpdate\")) this.handleDeviceChange();\n            } catch (e) {\n                this.error(e);\n            }\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                let filters: WebMidi.MIDIPortType[];\n                if (isBang(data)) {\n                    filters = this.args.slice();\n                    if (!filters.length) filters.push(\"input\", \"output\");\n                } else {\n                    filters = data.slice();\n                }\n                const { midiAccess } = this._;\n                if (!midiAccess) {\n                    this.error(\"MIDIAccess not available.\");\n                    return;\n                }\n                const devices: WebMidi.MIDIPort[] = [];\n                if (filters.indexOf(\"input\") !== -1) midiAccess.inputs.forEach(v => devices.push(v));\n                if (filters.indexOf(\"output\") !== -1) midiAccess.outputs.forEach(v => devices.push(v));\n                const options = devices.map((d, key) => {\n                    const { type, name, id } = d;\n                    return { key, icon: { input: \"sign-in\", output: \"sign-out\" }[type], text: name || id, value: id };\n                });\n                this.outletAll([devices, options]);\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this._.midiAccess) this._.midiAccess.removeEventListener(\"statechange\", this.handleDeviceChange);\n        });\n    }\n}\n","import type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\nimport MidiObject from \"./Base\";\r\n\r\ninterface IS {\r\n    channel: number;\r\n}\r\n\r\ntype I = [Iterable<number>, Iterable<number>, Iterable<number>, number, number, number, number];\r\n\r\ntype O = [Uint8Array];\r\n\r\ninterface P {\r\n    hires: \"off\" | \"float\" | \"14bit\";\r\n}\r\n\r\nexport default class midiFormat extends MidiObject<{}, {}, I, O, [string], P> {\r\n    static description = \"Prepare data in the form of a MIDI message\";\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: \"Raw MIDI message: Uint8Array\"\r\n    }];\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"Note-on and Note-off [pitch, velocity]: Iterable<number>\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"Poly Key Pressure [key, value]: Iterable<number>\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"Control Change [controller, value]: Iterable<number>\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"number\",\r\n        description: \"Program Change\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"number\",\r\n        description: \"Aftertouch\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"number\",\r\n        description: \"Pitch Bend\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"number\",\r\n        description: \"MIDI Channel\"\r\n    }];\r\n    static props: IPropsMeta<P> = {\r\n        hires: {\r\n            type: \"enum\",\r\n            enums: [\"off\", \"float\", \"14bit\"],\r\n            default: \"off\",\r\n            description: \"High-resolution Pitch Bend (Off (0-127), Float (-1 to 1), 14-bit Fixed (-8192 to 8191))\"\r\n        }\r\n    };\r\n    _: IS = { channel: 0 };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 7;\r\n            this.outlets = 1;\r\n        })\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet < 3) {\r\n                try {\r\n                    let [data1, data2] = data as Iterable<number>;\r\n                    if (typeof data1 !== \"number\" || typeof data2 !== \"number\") {\r\n                        throw new Error(\"Input MIDI data is not numbers\");\r\n                    }\r\n                    data1 = Math.round(Math.max(0, Math.min(127, data1)));\r\n                    data2 = Math.round(Math.max(0, Math.min(127, data2)));\r\n                    if (inlet === 0) {\r\n                        this.outlet(0, new Uint8Array([0x90 + this._.channel, data1, data2]));\r\n                    } else if (inlet === 1) {\r\n                        this.outlet(0, new Uint8Array([0xa0 + this._.channel, data1, data2]));\r\n                    } else if (inlet === 2) {\r\n                        this.outlet(0, new Uint8Array([0xb0 + this._.channel, data1, data2]));\r\n                    }\r\n                } catch (e) {\r\n                    this.error(e);\r\n                }\r\n            } else if (inlet >= 3) {\r\n                if (typeof data !== \"number\") {\r\n                    this.error(\"Input MIDI data is not number\");\r\n                    return;\r\n                }\r\n                const data1 = Math.round(Math.max(0, Math.min(127, data))); \r\n                if (inlet === 3) {\r\n                    this.outlet(0, new Uint8Array([0xc0 + this._.channel, data1]));\r\n                } else if (inlet === 4) {\r\n                    this.outlet(0, new Uint8Array([0xd0 + this._.channel, data1]));\r\n                } else if (inlet === 5) {\r\n                    const hires = this.getProp(\"hires\");\r\n                    if (hires === \"off\") {\r\n                        this.outlet(0, new Uint8Array([0xe0 + this._.channel, 0, data1]));\r\n                    } else if (hires === \"float\") {\r\n                        const data = ~~((Math.max(-1, Math.min(1, data1)) + 1) * 0.5 * 16383);\r\n                        this.outlet(0, new Uint8Array([0xe0 + this._.channel, data & 0x7f, data >> 7]));\r\n                    } else {\r\n                        const data = ~~Math.max(-8192, Math.min(8191, data1)) + 8192;\r\n                        this.outlet(0, new Uint8Array([0xe0 + this._.channel, data & 0x7f, data >> 7]));\r\n                    }\r\n                } else if (inlet === 6) {\r\n                    this._.channel = Math.min(15, data1 - 1);\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","import type { IArgsMeta, IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\nimport { Bang, isBang } from \"../sdk\";\r\nimport MidiObject from \"./Base\";\r\n\r\ninterface IS {\r\n    midiAccess: WebMidi.MIDIAccess;\r\n    search: string;\r\n    port: WebMidi.MIDIInput;\r\n}\r\n\r\nexport default class midiIn extends MidiObject<{}, {}, [string | Bang], [Uint8Array, WebMidi.MIDIInput], [string]> {\r\n    static description = \"Get MIDI input from device name or ID\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"string to fetch device name or ID, bang to output MIDI port instance\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: \"MIDI message: Uint8Array\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"Instance: MIDIPort\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"string\",\r\n        optional: false,\r\n        description: \"Device name or ID\"\r\n    }];\r\n    _: IS = { midiAccess: undefined as WebMidi.MIDIAccess, search: undefined as string, port: undefined as WebMidi.MIDIInput };\r\n    handleDeviceChange = async () => {\r\n        const { midiAccess } = this._;\r\n        if (!midiAccess) {\r\n            this.error(\"MIDIAccess not available.\");\r\n            return;\r\n        }\r\n        const devices: WebMidi.MIDIInput[] = [];\r\n        midiAccess.inputs.forEach(v => devices.push(v));\r\n        const enums = devices.map(d => d.name || d.id);\r\n        const { meta } = this;\r\n        meta.args[0] = { ...midiIn.args[0], type: \"enum\", enums };\r\n        this.setMeta(meta);\r\n    };\r\n    handleMIDIMessage = (e: WebMidi.MIDIMessageEvent) => this.outlet(0, e.data);\r\n    newSearch = async (search?: string) => {\r\n        this._.search = search;\r\n        const { midiAccess } = this._;\r\n        if (!midiAccess) {\r\n            this.error(\"MIDIAccess not available.\");\r\n            return;\r\n        }\r\n        const devices: WebMidi.MIDIInput[] = [];\r\n        midiAccess.inputs.forEach(v => devices.push(v));\r\n        for (let i = 0; i < devices.length; i++) {\r\n            const port = devices[i];\r\n            if (!search || port.id === search || port.name === search) {\r\n                if (port !== this._.port) {\r\n                    if (this._.port) this._.port.removeEventListener(\"midimessage\", this.handleMIDIMessage);\r\n                    this._.port = port;\r\n                    port.addEventListener(\"midimessage\", this.handleMIDIMessage);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 2;\r\n        });\r\n        this.on(\"postInit\", async () => {\r\n            const search = this.args[0];\r\n            try {\r\n                const midiAccess = await navigator.requestMIDIAccess({ sysex: true });\r\n                this._.midiAccess = midiAccess;\r\n                midiAccess.addEventListener(\"statechange\", this.handleDeviceChange);\r\n                this.handleDeviceChange();\r\n                this.newSearch(search);\r\n            } catch (e) {\r\n                this.error(e);\r\n            }\r\n        });\r\n        this.on(\"updateArgs\", (args: [string?]) => {\r\n            this.newSearch(args[0]);\r\n        });\r\n        this.on(\"updateProps\", () => {\r\n            this.newSearch(this._.search);\r\n        });\r\n        this.on(\"inlet\", async ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    await this.newSearch(data);\r\n                }\r\n                if (this._.port) this.outlet(1, this._.port);\r\n            }\r\n        });\r\n        this.on(\"destroy\", () => {\r\n            if (this._.midiAccess) this._.midiAccess.removeEventListener(\"statechange\", this.handleDeviceChange);\r\n            if (this._.port) this._.port.removeEventListener(\"midimessage\", this.handleMIDIMessage);\r\n        });\r\n    }\r\n}\r\n","import type { IArgsMeta, IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\nimport { Bang, isBang } from \"../sdk\";\r\nimport MidiObject from \"./Base\";\r\n\r\ninterface IS {\r\n    midiAccess: WebMidi.MIDIAccess;\r\n    search: string;\r\n    port: WebMidi.MIDIOutput;\r\n    timestamp: number;\r\n}\r\n\r\nexport default class midiOut extends MidiObject<{}, IS, [Uint8Array | number[] | string | Bang, number], [WebMidi.MIDIOutput], [string]> {\r\n    static description = \"Get MIDI output from device name or ID\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"Uint8Array or number[] to output MIDI message, string to fetch device name or ID, bang to output MIDI port instance\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"number\",\r\n        description: \"The time at which to begin sending the data to the port. 0 or past means immediate send.\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: \"Instance: MIDIPort\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"string\",\r\n        optional: false,\r\n        description: \"Device name or ID\"\r\n    }];\r\n    _: IS = { midiAccess: undefined as WebMidi.MIDIAccess, search: undefined as string, port: undefined as WebMidi.MIDIOutput, timestamp: 0 };\r\n    handleDeviceChange = async () => {\r\n        const { midiAccess } = this._;\r\n        if (!midiAccess) {\r\n            this.error(\"MIDIAccess not available.\");\r\n            return;\r\n        }\r\n        const devices: WebMidi.MIDIOutput[] = [];\r\n        midiAccess.outputs.forEach(v => devices.push(v));\r\n        const enums = devices.map(d => d.name || d.id);\r\n        const { meta } = this;\r\n        meta.args[0] = { ...midiOut.args[0], type: \"enum\", enums };\r\n        this.setMeta(meta);\r\n    };\r\n    newSearch = async (search?: string) => {\r\n        this._.search = search;\r\n        const { midiAccess } = this._;\r\n        if (!midiAccess) {\r\n            this.error(\"MIDIAccess not available.\");\r\n            return;\r\n        }\r\n        const devices: WebMidi.MIDIOutput[] = [];\r\n        midiAccess.outputs.forEach(v => devices.push(v));\r\n        for (let i = 0; i < devices.length; i++) {\r\n            const port = devices[i];\r\n            if (!search || port.id === search || port.name === search) {\r\n                this._.port = port;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"postInit\", async () => {\r\n            const search = this.box.args[0];\r\n            try {\r\n                const midiAccess = await navigator.requestMIDIAccess({ sysex: true });\r\n                this._.midiAccess = midiAccess;\r\n                midiAccess.addEventListener(\"statechange\", this.handleDeviceChange);\r\n                this.handleDeviceChange();\r\n                this.newSearch(search);\r\n            } catch (e) {\r\n                this.error(e);\r\n            }\r\n        });\r\n        this.on(\"updateArgs\", (args: [string?]) => {\r\n            this.newSearch(args[0]);\r\n        });\r\n        this.on(\"updateProps\", () => {\r\n            this.newSearch(this._.search);\r\n        });\r\n        this.on(\"inlet\", async ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    if (typeof data === \"string\") {\r\n                        await this.newSearch(data);\r\n                    } else {\r\n                        if (this._.port) this._.port.send(data as Uint8Array | number[]);\r\n                        return;\r\n                    }\r\n                }\r\n                if (this._.port) this.outlet(0, this._.port);\r\n            } else if (inlet === 1) {\r\n                this._.timestamp = +data || 0 as number;\r\n            }\r\n        });\r\n        this.on(\"destroy\", () => {\r\n            if (this._.midiAccess) this._.midiAccess.removeEventListener(\"statechange\", this.handleDeviceChange);\r\n        });\r\n    }\r\n}\r\n","import type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\nimport { Utils } from \"../sdk\";\r\nimport MidiObject from \"./Base\";\r\n\r\ntype I = [Iterable<number>];\r\n\r\ntype O = [[number, number], [number, number], [number, number], number, number, number, number];\r\n\r\ninterface P {\r\n    hires: \"off\" | \"float\" | \"14bit\";\r\n}\r\n\r\nexport default class midiParse extends MidiObject<{}, {}, I, O, [string], P> {\r\n    static description = \"Interpret raw MIDI data\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"Raw MIDI message: Iterable<number>\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: \"Note-on and Note-off [pitch, velocity]: Uint8Array\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"Poly Key Pressure [key, value]: Uint8Array\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"Control Change [controller, value]: Uint8Array\"\r\n    }, {\r\n        type: \"number\",\r\n        description: \"Program Change\"\r\n    }, {\r\n        type: \"number\",\r\n        description: \"Aftertouch\"\r\n    }, {\r\n        type: \"number\",\r\n        description: \"Pitch Bend\"\r\n    }, {\r\n        type: \"number\",\r\n        description: \"MIDI Channel\"\r\n    }];\r\n    static props: IPropsMeta<P> = {\r\n        hires: {\r\n            type: \"enum\",\r\n            enums: [\"off\", \"float\", \"14bit\"],\r\n            default: \"off\",\r\n            description: \"High-resolution Pitch Bend (Off (0-127), Float (-1 to 1), 14-bit Fixed (-8192 to 8191))\"\r\n        }\r\n    };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 7;\r\n        })\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                try {\r\n                    const [data0, data1, data2] = data;\r\n                    const eventType = data0 >> 4;\r\n                    const channel = data0 & 0x0f + 1;\r\n                    if (eventType === 0x08) {\r\n                        this.outlet(0, [data1, 0]);\r\n                    } else if (eventType === 0x09) {\r\n                        this.outlet(6, channel);\r\n                        this.outlet(0, [data1, data2]);\r\n                    } else if (eventType === 0x0a) {\r\n                        this.outlet(6, channel);\r\n                        this.outlet(1, [data1, data2]);\r\n                    } else if (eventType === 0x0b) {\r\n                        this.outlet(6, channel);\r\n                        this.outlet(2, [data1, data2]);\r\n                    } else if (eventType === 0x0c) {\r\n                        this.outlet(6, channel);\r\n                        this.outlet(3, data1);\r\n                    } else if (eventType === 0x0d) {\r\n                        this.outlet(6, channel);\r\n                        this.outlet(4, data1);\r\n                    } else if (eventType === 0x0e) {\r\n                        this.outlet(6, channel);\r\n                        const hires = this.getProp(\"hires\");\r\n                        if (hires === \"off\") this.outlet(5, data2);\r\n                        else if (hires === \"float\") this.outlet(5, (data1 + (data2 << 7)) / 16383 * 2 - 1)\r\n                        else this.outlet(5, -8192 + data1 + (data2 << 7));\r\n                    } else {\r\n                        this.error(`Unrecognised MIDI event type: ${eventType}`)\r\n                    }\r\n                } catch (e) {\r\n                    this.error(e);\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","import * as JSON from \"../package.json\";\n\nexport default JSON;\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    ReactDOM,\r\n    SemanticUI,\r\n    PatcherAudio,\r\n    OperableAudioBuffer,\r\n    Patcher,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    DefaultObject,\r\n    BaseUI,\r\n    DefaultUI,\r\n    CanvasUI,\r\n    CodeUI,\r\n    DefaultPopupUI,\r\n    CodePopupUI,\r\n    DOMUI,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    generateRemotedObject,\r\n    Bang,\r\n    isBang,\r\n    TransmitterNode,\r\n    TemporalAnalyserNode,\r\n    SpectralAnalyserNode,\r\n    MathUtils,\r\n    BufferUtils,\r\n    Utils,\r\n    getReactMonacoEditor\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface PatcherAudio extends InstanceType<typeof PatcherAudio> {}\r\nexport interface OperableAudioBuffer extends InstanceType<typeof OperableAudioBuffer> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\nexport interface TransmitterNode extends InstanceType<typeof TransmitterNode> {}\r\nexport interface TemporalAnalyserNode extends InstanceType<typeof TemporalAnalyserNode> {}\r\nexport interface SpectralAnalyserNode extends InstanceType<typeof SpectralAnalyserNode> {}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import midiDevices from \"./objects/devices\";\nimport midiFormat from \"./objects/midiFormat\";\nimport midiIn from \"./objects/midiIn\";\nimport midiOut from \"./objects/midiOut\";\nimport midiParse from \"./objects/midiparse\";\n\nexport default async () => {\n    return {\n        midiDevices,\n        midiIn,\n        midiin: midiIn,\n        midiOut,\n        midiout: midiOut,\n        midiFormat,\n        midiformat: midiFormat,\n        midiParse,\n        midiparse: midiParse,\n    };\n};"],"names":["packageInfo","name","split","pop","replace","author","license","keywords","version","description","jspatcher","DefaultObject","MidiObject","isBang","midiDevices","midiAccess","undefined","getProp","filters","args","slice","length","push","_","error","devices","indexOf","inputs","forEach","v","outputs","options","map","d","key","type","id","icon","input","output","text","value","outletAll","subscribe","on","inlets","outlets","navigator","requestMIDIAccess","sysex","addEventListener","handleDeviceChange","e","data","inlet","removeEventListener","isHot","varLength","optional","enums","default","autoUpdate","midiFormat","channel","data1","data2","Error","Math","round","max","min","outlet","Uint8Array","hires","midiIn","search","port","meta","setMeta","i","handleMIDIMessage","newSearch","midiOut","timestamp","box","send","midiParse","data0","eventType","JSON","sdk","globalThis","jspatcherEnv","React","ReactDOM","SemanticUI","PatcherAudio","OperableAudioBuffer","Patcher","Box","Line","BaseObject","BaseUI","DefaultUI","CanvasUI","CodeUI","DefaultPopupUI","CodePopupUI","DOMUI","generateDefaultObject","generateRemoteObject","generateRemotedObject","Bang","TransmitterNode","TemporalAnalyserNode","SpectralAnalyserNode","MathUtils","BufferUtils","Utils","getReactMonacoEditor","midiin","midiout","midiformat","midiparse"],"sourceRoot":""}